%Copyright Â© 2018, Sampsa Pursiainen

if not(isfield(zef,'inv_multires_dec')); 
    zef.inv_multires_dec = []; 
end; 
if not(isfield(zef,'inv_multires_n_decompositions')); 
    zef.inv_multires_n_decompositions = [20]; 
end; 
if not(isfield(zef,'inv_multires_ind')); 
    zef.inv_multires_ind= []; 
end; 
if not(isfield(zef,'inv_multires_count')); 
    zef.inv_multires_count= []; 
end; 
if not(isfield(zef,'inv_multires_n_levels')); 
    zef.inv_multires_n_levels= [3]; 
end; 
if not(isfield(zef,'inv_multires_sparsity')); 
    zef.inv_multires_sparsity = [4]; 
end; 
if not(isfield(zef,'inv_multires_n_iter')); 
    zef.inv_multires_n_iter = [10 10 10]; 
end; 
if not(isfield(zef,'inv_hyperprior')); 
    zef.inv_hyperprior = 1; 
end; 
if not(isfield(zef,'inv_beta')); 
    zef.inv_beta = 1.5; 
end;
if not(isfield(zef,'inv_theta0')); 
    zef.inv_theta0 = 0.001; 
end;
if not(isfield(zef,'inv_likelihood_std')); 
    zef.inv_likelihood_std = 0.01; 
end;
if not(isfield(zef,'inv_n_map_iterations')); 
    zef.inv_n_map_iterations = 25; 
end;
if not(isfield(zef,'inv_pcg_tol')); 
    zef.inv_pcg_tol = 1e-8; 
end;
if not(isfield(zef,'inv_sampling_frequency')); 
    zef.inv_sampling_frequency = 1025; 
end;
if not(isfield(zef,'inv_low_cut_frequency')); 
    zef.inv_low_cut_frequency = 7; 
end;
if not(isfield(zef,'inv_high_cut_frequency')); 
    zef.inv_high_cut_frequency = 9; 
end;
if not(isfield(zef,'inv_data_segment')); 
    zef.inv_data_segment = 1; 
end;
if not(isfield(zef,'normalize_data')); 
    zef.normalize_data = 1; 
end;

if not(isfield(zef,'inv_time_1')); 
    zef.inv_time_1 = 0; 
end;
if not(isfield(zef,'inv_time_2')); 
    zef.inv_time_2 = 0; 
end;
if not(isfield(zef,'inv_time_3')); 
    zef.inv_time_3 = 0; 
end;
if not(isfield(zef,'number_of_frames')); 
    zef.number_of_frames = 1; 
end;

set(zef.h_inv_multires_n_levels ,'string',num2str(zef.inv_multires_n_levels));
set(zef.h_inv_multires_n_decompositions ,'string',num2str(zef.inv_multires_n_decompositions));
set(zef.h_inv_multires_sparsity ,'string',num2str(zef.inv_multires_sparsity));
set(zef.h_inv_hyperprior ,'value',zef.inv_hyperprior);
set(zef.h_inv_beta ,'string',num2str(zef.inv_beta));
set(zef.h_inv_theta0 ,'string',num2str(zef.inv_theta0));
set(zef.h_inv_likelihood_std ,'string',num2str(zef.inv_likelihood_std));
set(zef.h_inv_multires_n_iter ,'string',num2str(zef.inv_multires_n_iter));
set(zef.h_inv_sampling_frequency ,'string',num2str(zef.inv_sampling_frequency));
set(zef.h_inv_low_cut_frequency ,'string',num2str(zef.inv_low_cut_frequency));
set(zef.h_inv_high_cut_frequency ,'string',num2str(zef.inv_high_cut_frequency));
set(zef.h_inv_data_segment ,'string',num2str(zef.inv_data_segment));
set(zef.h_normalize_data ,'value',zef.normalize_data);
set(zef.h_inv_time_1 ,'string',num2str(zef.inv_time_1));
set(zef.h_inv_time_2 ,'string',num2str(zef.inv_time_2));
set(zef.h_inv_time_3 ,'string',num2str(zef.inv_time_3));
set(zef.h_number_of_frames ,'string',num2str(zef.number_of_frames));